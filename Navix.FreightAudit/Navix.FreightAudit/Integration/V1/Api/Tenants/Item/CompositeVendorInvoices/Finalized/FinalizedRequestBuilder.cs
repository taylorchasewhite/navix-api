// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using Navix.FreightAudit.Models.Invoice.Models.Responses;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Navix.FreightAudit.Integration.V1.Api.Tenants.Item.CompositeVendorInvoices.Finalized
{
    /// <summary>
    /// Builds and executes requests for operations under \integration\v1\api\tenants\{tenantUuid}\composite-vendor-invoices\finalized
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class FinalizedRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Navix.FreightAudit.Integration.V1.Api.Tenants.Item.CompositeVendorInvoices.Finalized.FinalizedRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public FinalizedRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/integration/v1/api/tenants/{tenantUuid}/composite-vendor-invoices/finalized?StartTime={StartTime}{&EndTime*,PageNumber*,PageSize*,ResultsDelivered*,SortOrder*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Navix.FreightAudit.Integration.V1.Api.Tenants.Item.CompositeVendorInvoices.Finalized.FinalizedRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public FinalizedRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/integration/v1/api/tenants/{tenantUuid}/composite-vendor-invoices/finalized?StartTime={StartTime}{&EndTime*,PageNumber*,PageSize*,ResultsDelivered*,SortOrder*}", rawUrl)
        {
        }
        /// <summary>
        /// Retrieves a paginated list containing the unique identifier (UUID) of each of the vendor invoices finalized between the specified `StartTime` and `EndTime`. Thisendpoint is intended to be polled on a regular basis.
        /// </summary>
        /// <returns>A <see cref="global::Navix.FreightAudit.Models.Invoice.Models.Responses.FinalizedInvoicePaginationResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Navix.FreightAudit.Models.Invoice.Models.Responses.FinalizedInvoicePaginationResponse?> GetAsync(Action<RequestConfiguration<global::Navix.FreightAudit.Integration.V1.Api.Tenants.Item.CompositeVendorInvoices.Finalized.FinalizedRequestBuilder.FinalizedRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Navix.FreightAudit.Models.Invoice.Models.Responses.FinalizedInvoicePaginationResponse> GetAsync(Action<RequestConfiguration<global::Navix.FreightAudit.Integration.V1.Api.Tenants.Item.CompositeVendorInvoices.Finalized.FinalizedRequestBuilder.FinalizedRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::Navix.FreightAudit.Models.Invoice.Models.Responses.FinalizedInvoicePaginationResponse>(requestInfo, global::Navix.FreightAudit.Models.Invoice.Models.Responses.FinalizedInvoicePaginationResponse.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Retrieves a paginated list containing the unique identifier (UUID) of each of the vendor invoices finalized between the specified `StartTime` and `EndTime`. Thisendpoint is intended to be polled on a regular basis.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Navix.FreightAudit.Integration.V1.Api.Tenants.Item.CompositeVendorInvoices.Finalized.FinalizedRequestBuilder.FinalizedRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Navix.FreightAudit.Integration.V1.Api.Tenants.Item.CompositeVendorInvoices.Finalized.FinalizedRequestBuilder.FinalizedRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Navix.FreightAudit.Integration.V1.Api.Tenants.Item.CompositeVendorInvoices.Finalized.FinalizedRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Navix.FreightAudit.Integration.V1.Api.Tenants.Item.CompositeVendorInvoices.Finalized.FinalizedRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Navix.FreightAudit.Integration.V1.Api.Tenants.Item.CompositeVendorInvoices.Finalized.FinalizedRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Retrieves a paginated list containing the unique identifier (UUID) of each of the vendor invoices finalized between the specified `StartTime` and `EndTime`. Thisendpoint is intended to be polled on a regular basis.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class FinalizedRequestBuilderGetQueryParameters 
        {
            /// <summary>End time range to find Vendor Invoices which have finalized before this start time. This start time is inclusive. Default: Present time.End time time zone is interpreted as UTC.</summary>
            public DateTimeOffset? EndTime { get; set; }
            /// <summary>Page index of the records to return. First page and default value is 0</summary>
            public int? PageNumber { get; set; }
            /// <summary>Number of records per page. Default value is 20, maximum value is 100</summary>
            public int? PageSize { get; set; }
            /// <summary>Flag filter to return only Finalized Invoices which have been delivered or not.If this flag is not set, then the filter is not applied.Values: true, false, Null.Default value is Null</summary>
            public bool? ResultsDelivered { get; set; }
            /// <summary>Sort order applied to the finalization time. Values: ASC, DESC. Default value is DESC</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? SortOrder { get; set; }
#nullable restore
#else
            public string SortOrder { get; set; }
#endif
            /// <summary>Start time range to find Vendor Invoices which have finalized after this start time. This start time is exclusive.Start time time zone is interpreted as UTC.</summary>
            public DateTimeOffset? StartTime { get; set; }
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class FinalizedRequestBuilderGetRequestConfiguration : RequestConfiguration<global::Navix.FreightAudit.Integration.V1.Api.Tenants.Item.CompositeVendorInvoices.Finalized.FinalizedRequestBuilder.FinalizedRequestBuilderGetQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
