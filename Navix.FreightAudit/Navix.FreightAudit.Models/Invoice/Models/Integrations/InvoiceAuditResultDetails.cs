// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System;
namespace Navix.FreightAudit.Models.Invoice.Models.Integrations
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class InvoiceAuditResultDetails : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The date (without time) the invoice was finalized (either approved or terminated)</summary>
        public Date? ApprovedDate { get; set; }
        /// <summary>The email address of the person who approved this invoice</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ApproverEmail { get; set; }
#nullable restore
#else
        public string ApproverEmail { get; set; }
#endif
        /// <summary>Associated order line items</summary>
        public bool? AssociatedOrderLineItems { get; set; }
        /// <summary>The date (without time) the invoice was created within Navix</summary>
        public Date? CreatedDate { get; set; }
        /// <summary>The currency used with this invoice. Possible values are:* `USD` (US Dollar)* `CAD` (Canadian Dollar)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CurrencyCode { get; set; }
#nullable restore
#else
        public string CurrencyCode { get; set; }
#endif
        /// <summary>Freight charge terms associated with this order. Example values include but are not limited to:* `Collect`* `Third Party`* `Prepaid`</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FreightChargeTerms { get; set; }
#nullable restore
#else
        public string FreightChargeTerms { get; set; }
#endif
        /// <summary>The date (without time) when the invoice was issued by the vendor.</summary>
        public Date? InvoiceDate { get; set; }
        /// <summary>Reference numbers associated with this invoice</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultInvoiceReferenceNumber>? InvoiceReferenceNumbers { get; set; }
#nullable restore
#else
        public List<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultInvoiceReferenceNumber> InvoiceReferenceNumbers { get; set; }
#endif
        /// <summary>Line items for the invoice</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultLineItemDetail>? LineItems { get; set; }
#nullable restore
#else
        public List<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultLineItemDetail> LineItems { get; set; }
#endif
        /// <summary>Likely the unique identifier for the invoice in the tenant&apos;s TMS.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Number { get; set; }
#nullable restore
#else
        public string Number { get; set; }
#endif
        /// <summary>The source of the document, i.e. Manual, EDI, OCR, etc.In some endpoints, this is also labeled as `VendorInvoiceFormatDescription`</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Source { get; set; }
#nullable restore
#else
        public string Source { get; set; }
#endif
        /// <summary>If the invoice was terminated, a more detailed explanation of why it was terminated. This will be null if the invoice was approved</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TerminatedMessage { get; set; }
#nullable restore
#else
        public string TerminatedMessage { get; set; }
#endif
        /// <summary>If the invoice was terminated, the reason why it was terminated. This will be null if the invoice was approved</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TerminatedReason { get; set; }
#nullable restore
#else
        public string TerminatedReason { get; set; }
#endif
        /// <summary>The total amount payable to the Vendor (the calculated sum of all adjusted vendor charges.)</summary>
        public double? TotalVendorPaymentAmount { get; set; }
        /// <summary>The vendor property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultVendor? Vendor { get; set; }
#nullable restore
#else
        public global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultVendor Vendor { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultDetails"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultDetails CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultDetails();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "approvedDate", n => { ApprovedDate = n.GetDateValue(); } },
                { "approverEmail", n => { ApproverEmail = n.GetStringValue(); } },
                { "associatedOrderLineItems", n => { AssociatedOrderLineItems = n.GetBoolValue(); } },
                { "createdDate", n => { CreatedDate = n.GetDateValue(); } },
                { "currencyCode", n => { CurrencyCode = n.GetStringValue(); } },
                { "freightChargeTerms", n => { FreightChargeTerms = n.GetStringValue(); } },
                { "invoiceDate", n => { InvoiceDate = n.GetDateValue(); } },
                { "invoiceReferenceNumbers", n => { InvoiceReferenceNumbers = n.GetCollectionOfObjectValues<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultInvoiceReferenceNumber>(global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultInvoiceReferenceNumber.CreateFromDiscriminatorValue)?.AsList(); } },
                { "lineItems", n => { LineItems = n.GetCollectionOfObjectValues<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultLineItemDetail>(global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultLineItemDetail.CreateFromDiscriminatorValue)?.AsList(); } },
                { "number", n => { Number = n.GetStringValue(); } },
                { "source", n => { Source = n.GetStringValue(); } },
                { "terminatedMessage", n => { TerminatedMessage = n.GetStringValue(); } },
                { "terminatedReason", n => { TerminatedReason = n.GetStringValue(); } },
                { "totalVendorPaymentAmount", n => { TotalVendorPaymentAmount = n.GetDoubleValue(); } },
                { "vendor", n => { Vendor = n.GetObjectValue<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultVendor>(global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultVendor.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDateValue("approvedDate", ApprovedDate);
            writer.WriteStringValue("approverEmail", ApproverEmail);
            writer.WriteBoolValue("associatedOrderLineItems", AssociatedOrderLineItems);
            writer.WriteDateValue("createdDate", CreatedDate);
            writer.WriteStringValue("currencyCode", CurrencyCode);
            writer.WriteStringValue("freightChargeTerms", FreightChargeTerms);
            writer.WriteDateValue("invoiceDate", InvoiceDate);
            writer.WriteCollectionOfObjectValues<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultInvoiceReferenceNumber>("invoiceReferenceNumbers", InvoiceReferenceNumbers);
            writer.WriteCollectionOfObjectValues<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultLineItemDetail>("lineItems", LineItems);
            writer.WriteStringValue("number", Number);
            writer.WriteStringValue("source", Source);
            writer.WriteStringValue("terminatedMessage", TerminatedMessage);
            writer.WriteStringValue("terminatedReason", TerminatedReason);
            writer.WriteDoubleValue("totalVendorPaymentAmount", TotalVendorPaymentAmount);
            writer.WriteObjectValue<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultVendor>("vendor", Vendor);
        }
    }
}
#pragma warning restore CS0618
