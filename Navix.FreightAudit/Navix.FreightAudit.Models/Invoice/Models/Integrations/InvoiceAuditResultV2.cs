// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Navix.FreightAudit.Models.Invoice.Models.Integrations
{
    /// <summary>
    /// Audit result model for v2 endpoint.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class InvoiceAuditResultV2 : IParsable
    {
        /// <summary>The invoiceDetails property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultDetailsV2? InvoiceDetails { get; set; }
#nullable restore
#else
        public global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultDetailsV2 InvoiceDetails { get; set; }
#endif
        /// <summary>Additional information about the order/load attached to the invoice</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultOrderV2>? Orders { get; set; }
#nullable restore
#else
        public List<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultOrderV2> Orders { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultV2"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultV2 CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultV2();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "invoiceDetails", n => { InvoiceDetails = n.GetObjectValue<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultDetailsV2>(global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultDetailsV2.CreateFromDiscriminatorValue); } },
                { "orders", n => { Orders = n.GetCollectionOfObjectValues<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultOrderV2>(global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultOrderV2.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultDetailsV2>("invoiceDetails", InvoiceDetails);
            writer.WriteCollectionOfObjectValues<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultOrderV2>("orders", Orders);
        }
    }
}
#pragma warning restore CS0618
