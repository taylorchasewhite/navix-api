// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Navix.FreightAudit.Models.Invoice.Models.Integrations
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class InvoiceAuditResultOrderV2 : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>All the customer charges associated with the order and invoice.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultCustomerChargeV2>? CustomerCharges { get; set; }
#nullable restore
#else
        public List<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultCustomerChargeV2> CustomerCharges { get; set; }
#endif
        /// <summary>The unique identifier for the customer of the invoice attached to the order, mastered by the tenant&apos;s system. This is usually the unique identifier for the customer in the tenant&apos;s TMS.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerExternalId { get; set; }
#nullable restore
#else
        public string CustomerExternalId { get; set; }
#endif
        /// <summary>All the documents that were initially ingested by Navix and are associated with this order and invoice.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultDocumentV2>? Documents { get; set; }
#nullable restore
#else
        public List<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultDocumentV2> Documents { get; set; }
#endif
        /// <summary>Freight Charge Terms associated with this Order. If no order is attached to the invoice this will be null. Example values include but are not limited to:* `Collect`* `Third Party`* `Prepaid`</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FreightChargeTerms { get; set; }
#nullable restore
#else
        public string FreightChargeTerms { get; set; }
#endif
        /// <summary>The metadata of the order. Metadata is generally not used by Navix, but can be used by the tenant to store additional data about the order. If no order is attached to the invoice this will be null</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultOrderV2_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultOrderV2_metadata Metadata { get; set; }
#endif
        /// <summary>An identified for the order, issued by the tenant. This is likely the unique identifier for the order in the tenant&apos;s TMS. If no order is attached to the invoice this will be null</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OrderNumber { get; set; }
#nullable restore
#else
        public string OrderNumber { get; set; }
#endif
        /// <summary>Reference numbers associated with this order.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultOrderReferenceNumberV2>? OrderReferenceNumbers { get; set; }
#nullable restore
#else
        public List<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultOrderReferenceNumberV2> OrderReferenceNumbers { get; set; }
#endif
        /// <summary>A unique identifier for the order, issued by Navix. This may not have any meaning to the API consumer&apos;s system. If no order is attached to the invoice this will be null</summary>
        public Guid? Uuid { get; set; }
        /// <summary>All the vendor charges associated with the order and invoice.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultVendorChargeV2>? VendorCharges { get; set; }
#nullable restore
#else
        public List<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultVendorChargeV2> VendorCharges { get; set; }
#endif
        /// <summary>The unique identifier for the vendor of the invoice attached to the order, mastered by the tenant&apos;s system. This is usually the unique identifier for the vendor in the tenant&apos;s TMS.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? VendorExternalId { get; set; }
#nullable restore
#else
        public string VendorExternalId { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultOrderV2"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultOrderV2 CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultOrderV2();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "customerCharges", n => { CustomerCharges = n.GetCollectionOfObjectValues<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultCustomerChargeV2>(global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultCustomerChargeV2.CreateFromDiscriminatorValue)?.AsList(); } },
                { "customerExternalId", n => { CustomerExternalId = n.GetStringValue(); } },
                { "documents", n => { Documents = n.GetCollectionOfObjectValues<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultDocumentV2>(global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultDocumentV2.CreateFromDiscriminatorValue)?.AsList(); } },
                { "freightChargeTerms", n => { FreightChargeTerms = n.GetStringValue(); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultOrderV2_metadata>(global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultOrderV2_metadata.CreateFromDiscriminatorValue); } },
                { "orderNumber", n => { OrderNumber = n.GetStringValue(); } },
                { "orderReferenceNumbers", n => { OrderReferenceNumbers = n.GetCollectionOfObjectValues<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultOrderReferenceNumberV2>(global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultOrderReferenceNumberV2.CreateFromDiscriminatorValue)?.AsList(); } },
                { "uuid", n => { Uuid = n.GetGuidValue(); } },
                { "vendorCharges", n => { VendorCharges = n.GetCollectionOfObjectValues<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultVendorChargeV2>(global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultVendorChargeV2.CreateFromDiscriminatorValue)?.AsList(); } },
                { "vendorExternalId", n => { VendorExternalId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultCustomerChargeV2>("customerCharges", CustomerCharges);
            writer.WriteStringValue("customerExternalId", CustomerExternalId);
            writer.WriteCollectionOfObjectValues<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultDocumentV2>("documents", Documents);
            writer.WriteStringValue("freightChargeTerms", FreightChargeTerms);
            writer.WriteObjectValue<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultOrderV2_metadata>("metadata", Metadata);
            writer.WriteStringValue("orderNumber", OrderNumber);
            writer.WriteCollectionOfObjectValues<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultOrderReferenceNumberV2>("orderReferenceNumbers", OrderReferenceNumbers);
            writer.WriteGuidValue("uuid", Uuid);
            writer.WriteCollectionOfObjectValues<global::Navix.FreightAudit.Models.Invoice.Models.Integrations.InvoiceAuditResultVendorChargeV2>("vendorCharges", VendorCharges);
            writer.WriteStringValue("vendorExternalId", VendorExternalId);
        }
    }
}
#pragma warning restore CS0618
