// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Navix.FreightAudit.Models.Customer.Api.Models.Requests.Integrations
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CustomerRequest : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The address1 property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Address1 { get; set; }
#nullable restore
#else
        public string Address1 { get; set; }
#endif
        /// <summary>The address2 property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Address2 { get; set; }
#nullable restore
#else
        public string Address2 { get; set; }
#endif
        /// <summary>The addressName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AddressName { get; set; }
#nullable restore
#else
        public string AddressName { get; set; }
#endif
        /// <summary>The billing term for the Customer. Defaults to &quot;NET 30&quot;. Possible values are:* `Net 0`* `Net 1`* `Net 2`* `Net 5`* `Net 7`* `Net 10`* `Net 14`* `Net 15`* `Net 20`* `Net 21`* `Net 24`* `Net 25`* `Net 27`* `Net 28`* `Net 29`* `Net 30`* `Net 31`* `Net 32`* `Net 33`* `Net 35`* `Net 40`* `Net 45`* `Net 47`* `Net 50`* `Net 55`* `Net 60`* `Net 65`* `Net 67`* `Net 75`* `Net 90`* `Net 99`* `Net 120`* `Prepaid`</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BillingTermId { get; set; }
#nullable restore
#else
        public string BillingTermId { get; set; }
#endif
        /// <summary>The city property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? City { get; set; }
#nullable restore
#else
        public string City { get; set; }
#endif
        /// <summary>The country property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Country { get; set; }
#nullable restore
#else
        public string Country { get; set; }
#endif
        /// <summary>The currency used by this Customer. Defaults to &quot;USD&quot;. Possible values are:* `USD`* `CAD`</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CurrencyId { get; set; }
#nullable restore
#else
        public string CurrencyId { get; set; }
#endif
        /// <summary>The name of the Customer.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>An ID used by the API consumer&apos;s system such as the ID in the TMS.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ExternalId { get; set; }
#nullable restore
#else
        public string ExternalId { get; set; }
#endif
        /// <summary>The principalContact property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Navix.FreightAudit.Models.Customer.Api.Models.Requests.CustomerContactRequest? PrincipalContact { get; set; }
#nullable restore
#else
        public global::Navix.FreightAudit.Models.Customer.Api.Models.Requests.CustomerContactRequest PrincipalContact { get; set; }
#endif
        /// <summary>The state property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? State { get; set; }
#nullable restore
#else
        public string State { get; set; }
#endif
        /// <summary>The zip property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Zip { get; set; }
#nullable restore
#else
        public string Zip { get; set; }
#endif
        /// <summary>The zip4 property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Zip4 { get; set; }
#nullable restore
#else
        public string Zip4 { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Navix.FreightAudit.Models.Customer.Api.Models.Requests.Integrations.CustomerRequest"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Navix.FreightAudit.Models.Customer.Api.Models.Requests.Integrations.CustomerRequest CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Navix.FreightAudit.Models.Customer.Api.Models.Requests.Integrations.CustomerRequest();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "address1", n => { Address1 = n.GetStringValue(); } },
                { "address2", n => { Address2 = n.GetStringValue(); } },
                { "addressName", n => { AddressName = n.GetStringValue(); } },
                { "billingTermId", n => { BillingTermId = n.GetStringValue(); } },
                { "city", n => { City = n.GetStringValue(); } },
                { "country", n => { Country = n.GetStringValue(); } },
                { "currencyId", n => { CurrencyId = n.GetStringValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "externalId", n => { ExternalId = n.GetStringValue(); } },
                { "principalContact", n => { PrincipalContact = n.GetObjectValue<global::Navix.FreightAudit.Models.Customer.Api.Models.Requests.CustomerContactRequest>(global::Navix.FreightAudit.Models.Customer.Api.Models.Requests.CustomerContactRequest.CreateFromDiscriminatorValue); } },
                { "state", n => { State = n.GetStringValue(); } },
                { "zip", n => { Zip = n.GetStringValue(); } },
                { "zip4", n => { Zip4 = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("address1", Address1);
            writer.WriteStringValue("address2", Address2);
            writer.WriteStringValue("addressName", AddressName);
            writer.WriteStringValue("billingTermId", BillingTermId);
            writer.WriteStringValue("city", City);
            writer.WriteStringValue("country", Country);
            writer.WriteStringValue("currencyId", CurrencyId);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("externalId", ExternalId);
            writer.WriteObjectValue<global::Navix.FreightAudit.Models.Customer.Api.Models.Requests.CustomerContactRequest>("principalContact", PrincipalContact);
            writer.WriteStringValue("state", State);
            writer.WriteStringValue("zip", Zip);
            writer.WriteStringValue("zip4", Zip4);
        }
    }
}
#pragma warning restore CS0618
