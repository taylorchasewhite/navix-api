// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Navix.FreightAudit.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class VendorInvoiceItemPublicDto : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The class property</summary>
        public double? Class { get; set; }
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The dimensions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Navix.FreightAudit.Models.VendorInvoiceItemDimensionsDto? Dimensions { get; set; }
#nullable restore
#else
        public global::Navix.FreightAudit.Models.VendorInvoiceItemDimensionsDto Dimensions { get; set; }
#endif
        /// <summary>The handlingUnit property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? HandlingUnit { get; set; }
#nullable restore
#else
        public string HandlingUnit { get; set; }
#endif
        /// <summary>The handlingUnitCount property</summary>
        public int? HandlingUnitCount { get; set; }
        /// <summary>The id property</summary>
        public int? Id { get; set; }
        /// <summary>The nmfcCode property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? NmfcCode { get; set; }
#nullable restore
#else
        public string NmfcCode { get; set; }
#endif
        /// <summary>The totalCount property</summary>
        public int? TotalCount { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Navix.FreightAudit.Models.VendorInvoiceItemPublicDto"/> and sets the default values.
        /// </summary>
        public VendorInvoiceItemPublicDto()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Navix.FreightAudit.Models.VendorInvoiceItemPublicDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Navix.FreightAudit.Models.VendorInvoiceItemPublicDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Navix.FreightAudit.Models.VendorInvoiceItemPublicDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "class", n => { Class = n.GetDoubleValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "dimensions", n => { Dimensions = n.GetObjectValue<global::Navix.FreightAudit.Models.VendorInvoiceItemDimensionsDto>(global::Navix.FreightAudit.Models.VendorInvoiceItemDimensionsDto.CreateFromDiscriminatorValue); } },
                { "handlingUnit", n => { HandlingUnit = n.GetStringValue(); } },
                { "handlingUnitCount", n => { HandlingUnitCount = n.GetIntValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "nmfcCode", n => { NmfcCode = n.GetStringValue(); } },
                { "totalCount", n => { TotalCount = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDoubleValue("class", Class);
            writer.WriteStringValue("description", Description);
            writer.WriteObjectValue<global::Navix.FreightAudit.Models.VendorInvoiceItemDimensionsDto>("dimensions", Dimensions);
            writer.WriteStringValue("handlingUnit", HandlingUnit);
            writer.WriteIntValue("handlingUnitCount", HandlingUnitCount);
            writer.WriteIntValue("id", Id);
            writer.WriteStringValue("nmfcCode", NmfcCode);
            writer.WriteIntValue("totalCount", TotalCount);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
