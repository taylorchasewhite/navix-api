// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Navix.FreightAudit.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class VendorInvoicePublicDto : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The chargeTerms property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ChargeTerms { get; set; }
#nullable restore
#else
        public string ChargeTerms { get; set; }
#endif
        /// <summary>The currency property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Currency { get; set; }
#nullable restore
#else
        public string Currency { get; set; }
#endif
        /// <summary>The customer property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Navix.FreightAudit.Models.VendorInvoiceCustomerPublicDto? Customer { get; set; }
#nullable restore
#else
        public global::Navix.FreightAudit.Models.VendorInvoiceCustomerPublicDto Customer { get; set; }
#endif
        /// <summary>The deliveryDate property</summary>
        public DateTimeOffset? DeliveryDate { get; set; }
        /// <summary>The documents property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Navix.FreightAudit.Models.VendorInvoiceDocumentUuidsPublicDto>? Documents { get; set; }
#nullable restore
#else
        public List<global::Navix.FreightAudit.Models.VendorInvoiceDocumentUuidsPublicDto> Documents { get; set; }
#endif
        /// <summary>The invoiceDate property</summary>
        public DateTimeOffset? InvoiceDate { get; set; }
        /// <summary>The invoiceNumber property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InvoiceNumber { get; set; }
#nullable restore
#else
        public string InvoiceNumber { get; set; }
#endif
        /// <summary>The items property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Navix.FreightAudit.Models.VendorInvoiceItemPublicDto>? Items { get; set; }
#nullable restore
#else
        public List<global::Navix.FreightAudit.Models.VendorInvoiceItemPublicDto> Items { get; set; }
#endif
        /// <summary>The metadata property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Navix.FreightAudit.Models.VendorInvoicePublicDto_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::Navix.FreightAudit.Models.VendorInvoicePublicDto_metadata Metadata { get; set; }
#endif
        /// <summary>The receivedDate property</summary>
        public DateTimeOffset? ReceivedDate { get; set; }
        /// <summary>The referenceNumbers property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Navix.FreightAudit.Models.VendorInvoiceReferenceNumberPublicDto>? ReferenceNumbers { get; set; }
#nullable restore
#else
        public List<global::Navix.FreightAudit.Models.VendorInvoiceReferenceNumberPublicDto> ReferenceNumbers { get; set; }
#endif
        /// <summary>The service property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Navix.FreightAudit.Models.VendorInvoiceServicePublicDto? Service { get; set; }
#nullable restore
#else
        public global::Navix.FreightAudit.Models.VendorInvoiceServicePublicDto Service { get; set; }
#endif
        /// <summary>The shipDate property</summary>
        public DateTimeOffset? ShipDate { get; set; }
        /// <summary>The state property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Navix.FreightAudit.Models.VendorInvoiceStatePublicDto? State { get; set; }
#nullable restore
#else
        public global::Navix.FreightAudit.Models.VendorInvoiceStatePublicDto State { get; set; }
#endif
        /// <summary>The stops property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Navix.FreightAudit.Models.VendorInvoiceStopPublicDto>? Stops { get; set; }
#nullable restore
#else
        public List<global::Navix.FreightAudit.Models.VendorInvoiceStopPublicDto> Stops { get; set; }
#endif
        /// <summary>The type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Type { get; set; }
#nullable restore
#else
        public string Type { get; set; }
#endif
        /// <summary>The uuid property</summary>
        public Guid? Uuid { get; set; }
        /// <summary>The vendor property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Navix.FreightAudit.Models.VendorInvoiceVendorPublicDto? Vendor { get; set; }
#nullable restore
#else
        public global::Navix.FreightAudit.Models.VendorInvoiceVendorPublicDto Vendor { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Navix.FreightAudit.Models.VendorInvoicePublicDto"/> and sets the default values.
        /// </summary>
        public VendorInvoicePublicDto()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Navix.FreightAudit.Models.VendorInvoicePublicDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Navix.FreightAudit.Models.VendorInvoicePublicDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Navix.FreightAudit.Models.VendorInvoicePublicDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "chargeTerms", n => { ChargeTerms = n.GetStringValue(); } },
                { "currency", n => { Currency = n.GetStringValue(); } },
                { "customer", n => { Customer = n.GetObjectValue<global::Navix.FreightAudit.Models.VendorInvoiceCustomerPublicDto>(global::Navix.FreightAudit.Models.VendorInvoiceCustomerPublicDto.CreateFromDiscriminatorValue); } },
                { "deliveryDate", n => { DeliveryDate = n.GetDateTimeOffsetValue(); } },
                { "documents", n => { Documents = n.GetCollectionOfObjectValues<global::Navix.FreightAudit.Models.VendorInvoiceDocumentUuidsPublicDto>(global::Navix.FreightAudit.Models.VendorInvoiceDocumentUuidsPublicDto.CreateFromDiscriminatorValue)?.AsList(); } },
                { "invoiceDate", n => { InvoiceDate = n.GetDateTimeOffsetValue(); } },
                { "invoiceNumber", n => { InvoiceNumber = n.GetStringValue(); } },
                { "items", n => { Items = n.GetCollectionOfObjectValues<global::Navix.FreightAudit.Models.VendorInvoiceItemPublicDto>(global::Navix.FreightAudit.Models.VendorInvoiceItemPublicDto.CreateFromDiscriminatorValue)?.AsList(); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::Navix.FreightAudit.Models.VendorInvoicePublicDto_metadata>(global::Navix.FreightAudit.Models.VendorInvoicePublicDto_metadata.CreateFromDiscriminatorValue); } },
                { "receivedDate", n => { ReceivedDate = n.GetDateTimeOffsetValue(); } },
                { "referenceNumbers", n => { ReferenceNumbers = n.GetCollectionOfObjectValues<global::Navix.FreightAudit.Models.VendorInvoiceReferenceNumberPublicDto>(global::Navix.FreightAudit.Models.VendorInvoiceReferenceNumberPublicDto.CreateFromDiscriminatorValue)?.AsList(); } },
                { "service", n => { Service = n.GetObjectValue<global::Navix.FreightAudit.Models.VendorInvoiceServicePublicDto>(global::Navix.FreightAudit.Models.VendorInvoiceServicePublicDto.CreateFromDiscriminatorValue); } },
                { "shipDate", n => { ShipDate = n.GetDateTimeOffsetValue(); } },
                { "state", n => { State = n.GetObjectValue<global::Navix.FreightAudit.Models.VendorInvoiceStatePublicDto>(global::Navix.FreightAudit.Models.VendorInvoiceStatePublicDto.CreateFromDiscriminatorValue); } },
                { "stops", n => { Stops = n.GetCollectionOfObjectValues<global::Navix.FreightAudit.Models.VendorInvoiceStopPublicDto>(global::Navix.FreightAudit.Models.VendorInvoiceStopPublicDto.CreateFromDiscriminatorValue)?.AsList(); } },
                { "type", n => { Type = n.GetStringValue(); } },
                { "uuid", n => { Uuid = n.GetGuidValue(); } },
                { "vendor", n => { Vendor = n.GetObjectValue<global::Navix.FreightAudit.Models.VendorInvoiceVendorPublicDto>(global::Navix.FreightAudit.Models.VendorInvoiceVendorPublicDto.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("chargeTerms", ChargeTerms);
            writer.WriteStringValue("currency", Currency);
            writer.WriteObjectValue<global::Navix.FreightAudit.Models.VendorInvoiceCustomerPublicDto>("customer", Customer);
            writer.WriteDateTimeOffsetValue("deliveryDate", DeliveryDate);
            writer.WriteCollectionOfObjectValues<global::Navix.FreightAudit.Models.VendorInvoiceDocumentUuidsPublicDto>("documents", Documents);
            writer.WriteDateTimeOffsetValue("invoiceDate", InvoiceDate);
            writer.WriteStringValue("invoiceNumber", InvoiceNumber);
            writer.WriteCollectionOfObjectValues<global::Navix.FreightAudit.Models.VendorInvoiceItemPublicDto>("items", Items);
            writer.WriteObjectValue<global::Navix.FreightAudit.Models.VendorInvoicePublicDto_metadata>("metadata", Metadata);
            writer.WriteDateTimeOffsetValue("receivedDate", ReceivedDate);
            writer.WriteCollectionOfObjectValues<global::Navix.FreightAudit.Models.VendorInvoiceReferenceNumberPublicDto>("referenceNumbers", ReferenceNumbers);
            writer.WriteObjectValue<global::Navix.FreightAudit.Models.VendorInvoiceServicePublicDto>("service", Service);
            writer.WriteDateTimeOffsetValue("shipDate", ShipDate);
            writer.WriteObjectValue<global::Navix.FreightAudit.Models.VendorInvoiceStatePublicDto>("state", State);
            writer.WriteCollectionOfObjectValues<global::Navix.FreightAudit.Models.VendorInvoiceStopPublicDto>("stops", Stops);
            writer.WriteStringValue("type", Type);
            writer.WriteGuidValue("uuid", Uuid);
            writer.WriteObjectValue<global::Navix.FreightAudit.Models.VendorInvoiceVendorPublicDto>("vendor", Vendor);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
