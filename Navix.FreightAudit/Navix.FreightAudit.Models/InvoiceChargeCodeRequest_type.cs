// <auto-generated/>
using System.Runtime.Serialization;
using System;
namespace Navix.FreightAudit.Models
{
    /// <summary>The charge code type. If a tenant is normalizing their invoice charge codes and description before sending to Navix, they can send in the type as `Tenant` with the corresponding code and description. This will enable our application to display the charges based on Tenant Charge codes setup. This can be helpful when tenantâ€™s have mapped carrier charge codes in their system to handle rating engine requests. If a tenant leaves type as blank or sends in type `Vendor`, we will lookup against the Vendor charge codes based on code and description upon ingestion. Any unknown vendor charges will need to be mapped during the audit process to build out vendor charge code list.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public enum InvoiceChargeCodeRequest_type
    {
        [EnumMember(Value = "Vendor")]
        #pragma warning disable CS1591
        Vendor,
        #pragma warning restore CS1591
        [EnumMember(Value = "Tenant")]
        #pragma warning disable CS1591
        Tenant,
        #pragma warning restore CS1591
    }
}
